name: CI
on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0/2'

jobs:
    linux-pretest:
        runs-on: ubuntu-latest
        steps:
        - name: checkout
          uses: actions/checkout@v4
        - name: Test build
          run: |
            sudo apt-get update
            sudo apt-get install valgrind uuid-dev
            python3 -m venv packages/python
            ./packages/python/bin/pip install ivpm
            DEBUG=1 ./packages/python/bin/python3 -m ivpm update -a
            DEBUG=1 ./packages/python/bin/python3 setup.py build_ext --inplace
            #./packages/python/bin/python3 -m pip uninstall debug-mgr
            #./packages/python/bin/python3 -m pip install --force-reinstall -e $(pwd)/packages/debug-mgr
            ls packages/python/lib/python*/site-packages
        - name: Run tests
          run: |
            export PATH=$(pwd)/packages/verilator/bin:${PATH}
            export PYTHONPATH=$(pwd)/python
            ./packages/python/bin/python3 -m pytest -s ./tests/unit/
    linux:
        needs: linux-pretest
        uses: zuspec/zuspec-release/.github/workflows/zuspec-pybuild.yml@main
        with:
            version_dir: 'python/zsp_sv'
        secrets:
            PYPI_API_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
    # macos:
    #     runs-on: macos-latest
    #     steps:
    #     - uses: actions/checkout@v4
    #     - name: Fetch dependencies
    #       run: |
    #         python3 --version
    #         python3 -m venv trampoline
    #         ./trampoline/bin/python3 -m pip install ivpm
    #         ./trampoline/bin/python3 -m ivpm update -a
    #         ./packages/python/bin/python3 -m pip install cython setuptools wheel build twine
    #     - name: Build wheel
    #       env:
    #         BUILD_NUM: ${{ github.run_id }}
    #       run: |
    #         echo "BUILD_NUM=${BUILD_NUM}" >> python/zsp_sv/__build_num__.py
    #         ./packages/python/bin/python3 setup.py bdist_wheel
    #     - name: Publish to PyPi
    #       if: startsWith(github.ref, 'refs/heads/main')
    #       env:
    #         TWINE_USERNAME: __token__
    #         TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    #       run: |
    #         ./packages/python/bin/python3 -m twine  upload dist/*.whl

    # windows:
    #     runs-on: ${{ matrix.platform }}
    #     strategy:
    #         matrix:
    #             include:
    #             - platform: windows-latest
    #               build_arch: x64
    #               python_arch: x64
    #               spec: '3.8'
    #             - platform: windows-latest
    #               build_arch: x64
    #               python_arch: x64
    #               spec: '3.9'
    #             - platform: windows-latest
    #               build_arch: x64
    #               python_arch: x64
    #               spec: '3.10'
    #             - platform: windows-latest
    #               build_arch: x64
    #               python_arch: x64
    #               spec: '3.11'
    #     steps:
    #     - name: checkout
    #       uses: actions/checkout@v4
            
    #     - name: Install python ${{ matrix.spec }}
    #       uses: actions/setup-python@v2
    #       with:
    #         architecture: ${{ matrix.python_arch }}
    #         python-version: ${{ matrix.spec }}
    #     - uses: ilammy/msvc-dev-cmd@v1.13.0
    #       with:
    #         arch: ${{ matrix.build_arch }}
            
    #     - name: Build/Test Package
    #       env:
    #         BUILD_NUM: ${{ github.run_id }}
    #       run: |
    #         python -m pip install ivpm
    #         python -m ivpm update -a
    #         ./packages/python/Scripts/python -m pip install ninja cython setuptools wheel build twine
    #         echo "BUILD_NUM=$env:BUILD_NUM" > python/zsp_sv/__build_num__.py
    #         ./packages/python/Scripts/python setup.py build bdist_wheel
    #         ls dist
            
    #     - name: Publish to PyPi
    #       if: startsWith(github.ref, 'refs/heads/main')
    #       env:
    #         TWINE_USERNAME: __token__
    #         TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
    #       shell: bash
    #       run: |
    #         ./packages/python/Scripts/python -m twine upload dist/*.whl
            


